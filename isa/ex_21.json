[
    {
        "name": "mapblk",
        "meaning": "Map Block Information",
        "doc": "Lookup address of block information by block number. Upper nibble of lower byte is used to determine block number.",
        "type": "reg_arith",
        "args": ["rd", "rs"],
        "opcode": "1100",
        "action": "if((reg[rs]>>4)==0x0)setreg(rd, uword(0xFE00));else if((reg[rs]>>4)==0x1)setreg(rd, uword(0xFE04));else if((reg[rs]>>4)==0x2)setreg(rd, uword(0xFE08));else if((reg[rs]>>4)==0x3)setreg(rd, uword(0xFE0C));else if((reg[rs]>>4)==0x4)setreg(rd, uword(0xFE40));else if((reg[rs]>>4)==0x5)setreg(rd, uword(0xFE44));else if((reg[rs]>>4)==0x6)setreg(rd, uword(0xFE48));else if((reg[rs]>>4)==0x7)setreg(rd, uword(0xFE4C));else if((reg[rs]>>4)==0x8)setreg(rd, uword(0xFE80));else if((reg[rs]>>4)==0x9)setreg(rd, uword(0xFE84));else if((reg[rs]>>4)==0xA)setreg(rd, uword(0xFE88));else if((reg[rs]>>4)==0xB)setreg(rd, uword(0xFE8C));else if((reg[rs]>>4)==0xC)setreg(rd, uword(0xFEC0));else if((reg[rs]>>4)==0xD)setreg(rd, uword(0xFEC4));else if((reg[rs]>>4)==0xE)setreg(rd, uword(0xFEC8));else if((reg[rs]>>4)==0xF)setreg(rd, uword(0xFECC));else throw ExecutionError(\"mapblk can't map specified block number.\")"
    },
    {
        "name": "stm",
        "meaning": "Set Transformation Mode",
        "doc": "Sets transformation mode for following call to `xlbu` instruction to value specified in `rs`, then sets the value to `rd`.",
        "type": "reg_arith",
        "args": ["rd", "rs"],
        "opcode": "1101",
        "action": "setstate(1, (reg[rs]>>1)&0x7);setreg(rd,(reg[rs]>>1)&0x7)"
    },
    {
        "name": "xlbu",
        "meaning": "Loads from transformed (by current address transormation mode) address value in register `rs` to the lower byte of register `rd`.",
        "doc": "Sets address transformation mode to value specified in `rs`, then sets the value to `rd`.",
        "type": "mem",
        "args": ["rd", "addr"],
        "opcode": "0100",
        "word_align": false,
        "action": "std::uint16_t a=reg[rs];if((getstate(1)&1)!=0)a=(~(a&0x30)&0x30)|(a&~0x30);if((getstate(1)&2)!=0)a=(~(a&0x3)&0x3)|(a&~0x3);std::uint16_t r=ubyte(getmem(a));if((getstate(1)&4)!=0)r=r==0?1:0;setreg(rd, r)"
    }
]
